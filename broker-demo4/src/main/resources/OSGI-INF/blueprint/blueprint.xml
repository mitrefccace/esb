<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">
    <reference availability="mandatory"
        filter="(osgi.jndi.service.name=jdbc/mySqlDataSource)"
        id="myDataSource" interface="javax.sql.DataSource"/>
    <camelContext id="camelContext-c6505bbc-9a60-4cfd-9b26-6937c9f62fa6"
        streamCache="true" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- Cache to memory -->
        <streamCaching bufferSize="0" id="cacheConfig"/>
        <dataFormats>
            <bindy classType="org.mitre.fcc.broker.User"
                id="bindyDataformat" type="Csv"/>
            <json id="jack" library="Jackson" prettyPrint="true"
                unmarshalTypeName="org.mitre.fcc.broker.User" useList="true"/>
            <json id="zendesk" library="Jackson" prettyPrint="true"
                unmarshalTypeName="org.mitre.fcc.broker.ZendeskUser" useList="true"/>
        </dataFormats>
        <restConfiguration bindingMode="off" component="jetty"
            host="0.0.0.0" port="8080">
            <dataFormatProperty key="prettyPrint" value="true"/>
        </restConfiguration>
        <rest path="/acedirect">
            <get consumes="application/json" uri="/zendesk/{zendesk_resource}/{zendesk_arguments)">
                <to uri="direct:zendesk_bridge"/>
            </get>
            <post consumes="application/octet-stream"
                produces="application/json" uri="/user">
                <to uri="direct:createupdate"/>
            </post>
            <post id="post_user_rest_binding" uri="/data/user">
                <to uri="direct:datacreateupdate"/>
            </post>
            <post id="post_zendesk_user_rest_binding" uri="/data/zendesk/user">
                <to uri="direct:zendeskjsondatacreateupdate"/>
            </post>
        </rest>
        <route id="zendesk_jetty">
            <from id="_from4" uri="jetty:http://0.0.0.0:8585/api?matchOnUriPrefix=true"/>
            <log id="_log5" message="from test: route: CamelHttpPath=[${header.CamelHttpPath}], CamelHttpUri=[${header.CamelHttpUri}]"/>
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <log id="_log6" message="body: ${body}"/>
            <log id="_log7" message="request to zendesk - before"/>
            <to id="_to1" uri="jetty:https://vmdigioia.zendesk.com/api?bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            <log id="_log8" message="request to zendesk - after"/>
        </route>
        <route id="zendesk_bridge">
            <from id="_from5" uri="direct:zendesk_bridge"/>
            <to id="_to2" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <toD id="_toD1" uri="https4://vmdigioia.zendesk.com/api/v2/${header.zendesk_request}?bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            <log id="_log10" message="request to zendesk - after"/>
        </route>
        <route id="csv_form_createupdate">
            <!-- Split (i.e., iterate) the user object list -->
            <from id="_from3" uri="direct:createupdate"/>
            <log id="_log1" message="transform csv file..."/>
            <bean id="_bean1" method="transform" ref="multipartTransform"/>
            <unmarshal id="_unmarshal1" ref="bindyDataformat"/>
            <log id="_log2" message="Got ${body}"/>
            <split id="_split1">
                <simple>${body}</simple>
                <log id="_log3" message="Split ${body}"/>
                <log id="_log4" message="User Name: ${body.name}"/>
                <multicast id="_multicast1">
                    <to id="_to3" uri="direct:mysql"/>
                    <to id="_to4" uri="direct:zendesk"/>
                </multicast>
            </split>
        </route>
        <route id="data_createupdate">
            <!-- Split (i.e., iterate) the user object list -->
            <from id="_from1" uri="direct:datacreateupdate"/>
            <log id="_log14" message="transform csv or json file..."/>
            <to id="_to9" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${in.header.Content-Type} == 'text/plain'</simple>
                    <to id="_to10" uri="direct:csvdatacreateupdate"/>
                </when>
                <when id="_when2">
                    <simple>${in.header.Content-Type} == 'application/json'</simple>
                    <convertBodyTo id="_convertBodyTo3" type="java.lang.String"/>
                    <choice id="_choice5">
                        <when id="_when6">
                            <simple>${body} contains 'user_fields'</simple>
                            <to id="_to11" uri="direct:zendeskjsondatacreateupdate"/>
                        </when>
                        <otherwise id="_otherwise5">
                            <to id="_to11" uri="direct:jsondatacreateupdate"/>
                        </otherwise>
                    </choice>
                </when>
                <otherwise id="_otherwise1">
                    <to id="_to12" uri="mock:unknownContent"/>
                </otherwise>
            </choice>
            <to id="_to18" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
        </route>
        <route id="csv_data_createupdate">
            <from id="_from2" uri="direct:csvdatacreateupdate"/>
            <unmarshal id="_unmarshal2" ref="bindyDataformat"/>
            <log id="_log15" message="Got ${body}"/>
            <split id="_split2" strategyRef="splitAggregator">
                <simple>${body}</simple>
                <log id="_log16" message="Split ${body}"/>
                <log id="_log17" message="User Name: ${body.name}"/>
                <setProperty id="_setProperty1" propertyName="user_id">
                    <simple>${body.id}</simple>
                </setProperty>
                <multicast id="_multicast2" strategyRef="multicastAggregator">
                    <to id="_to7" uri="direct:mysql"/>
                    <to id="_to8" uri="direct:zendesk"/>
                </multicast>
            </split>
        </route>
        <route id="json_data_createupdate">
            <from id="_from8" uri="direct:jsondatacreateupdate"/>
            <unmarshal id="_unmarshal3" ref="jack"/>
            <log id="_log19" message="Got ${body}"/>
            <split id="_split3" strategyRef="splitAggregator">
                <simple>${body}</simple>
                <log id="_log20" message="Split ${body}"/>
                <log id="_log21" message="User Name: ${body.name}"/>
                <setProperty id="_setProperty3" propertyName="user_id">
                    <simple>${body.id}</simple>
                </setProperty>
                <multicast id="_multicast3" strategyRef="multicastAggregator">
                    <to id="_to13" uri="direct:mysql"/>
                    <to id="_to14" uri="direct:zendesk"/>
                </multicast>
                <to id="_to17" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            </split>
        </route>
        <route id="zendesk_json_data_createupdate">
            <from id="_from9" uri="direct:zendeskjsondatacreateupdate"/>
            <log id="_log27" message="Got ${body}"/>
            <unmarshal id="_unmarshal4" ref="zendesk"/>
            <split id="_split4" strategyRef="splitAggregator">
                <simple>${body}</simple>
                <log id="_log28" message="Split ${body}"/>
                <log id="_log29" message="User Name: ${body.name}"/>
                <setHeader headerName="zendesk_format" id="_setHeader3">
                    <constant>true</constant>
                </setHeader>
                <setProperty id="_setProperty4" propertyName="user_id">
                    <simple>${body.externalId}</simple>
                </setProperty>
                <multicast id="_multicast4" strategyRef="multicastAggregator">
                    <to id="_to24" uri="direct:mysql"/>
                    <to id="_to25" uri="direct:zendesk"/>
                </multicast>
                <to id="_to26" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            </split>
        </route>
        <route id="mysql_createorupdate">
            <from id="_from6" uri="direct:mysql"/>
            <choice id="_choice4">
                <when id="_when5">
                    <simple>${body} is 'org.mitre.fcc.broker.ZendeskUser'</simple>
                    <log id="_log30" message="processing zendesk json"/>
                    <setBody id="_setBody1">
                        <simple trim="false">INSERT INTO users (user_id,user_email,user_name,user_address,user_phone,user_account,user_description) VALUES ("${body.externalId}","${body.email}","${body.name}","${body.userFields.address}","${body.phone}","${body.userFields.bankAccount}","${body.notes}")
		                                        ON DUPLICATE KEY UPDATE user_email="${body.email}",user_name="${body.name}",user_address="${body.userFields.address}",user_phone="${body.phone}",user_account="${body.userFields.bankAccount}",user_description="${body.notes}";</simple>
                    </setBody>
                </when>
                <otherwise id="_otherwise4">
                    <log id="_log31" message="processing flat json"/>
                    <setBody id="_setBody6">
                        <simple trim="false">INSERT INTO users (user_id,user_email,user_name,user_address,user_phone,user_account,user_description) VALUES ("${body.id}","${body.email}","${body.name}","${body.address}","${body.phone}","${body.account}","${body.notes}")
		                                        ON DUPLICATE KEY UPDATE user_email="${body.email}",user_name="${body.name}",user_address="${body.address}",user_phone="${body.phone}",user_account="${body.account}",user_description="${body.notes}";</simple>
                    </setBody>
                </otherwise>
            </choice>
            <log id="_log11" message="body before user jdbc: ${body}"/>
            <to id="_to5" uri="jdbc:myDataSource?useHeadersAsParameters=false"/>
            <log id="_log12" message="body after user jdbc: ${body}"/>
            <to id="_to15" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <choice id="_choice3">
                <when id="_when4">
                    <!-- There seems to be a bug where the update count sometimes is 1 or 2 on a successful insert/update -->
                    <simple>${header.CamelJdbcUpdateCount} &lt; 1</simple>
                    <setBody id="_setBody3">
                        <simple>{"result": mysql error - record not created or updated for user ID ${exchangeProperty.user_id}"}</simple>
                    </setBody>
                    <log id="_log24" message="received an error from mysql: ${body}"/>
                    <to id="_to21" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
                </when>
                <otherwise id="_otherwise3">
                    <log id="_log26" message="mysql successfully created or updated record for user ID: ${exchangeProperty.user_id}"/>
                    <setBody id="_setBody4">
                        <simple>{"result": "mysql record created or updated for user ID ${exchangeProperty.user_id}"}</simple>
                    </setBody>
                    <log id="_log25" message="mysql successfully created or updated: ${body}"/>
                    <to id="_to22" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
                </otherwise>
            </choice>
        </route>
        <route id="zendesk" streamCache="true">
            <!--             <convertBodyTo id="_convertBodyTo2" type="String"/> -->
            <from id="_from7" uri="direct:zendesk"/>
            <log id="_log13" message="body in zendesk: ${body}"/>
            <choice id="_choice6">
                <when id="_when7">
                    <simple>${body} is 'org.mitre.fcc.broker.User'</simple>
                    <bean id="_bean2" method="transform" ref="zendeskTransform"/>
                    <log id="_log18" message="body after transform ${body}"/>
                </when>
                <when id="_when8">
                    <simple>${body} is 'org.mitre.fcc.broker.ZendeskUser'</simple>
                    <marshal id="_marshal1" ref="zendesk"/>
                    <log message="body after marshal ${body}"/>
                </when>
            </choice>
            <to id="_to23" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <setHeader headerName="Content-Type" id="_setHeader1">
                <constant>application/json</constant>
            </setHeader>
            <to id="_to6" uri="https4://vmdigioia.zendesk.com/api/v2/users/create_or_update.json?bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            <log id="_log18" message="body after zendesk request: ${body}"/>
            <to id="_to16" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <choice id="_choice2">
                <when id="_when3">
                    <simple>${header.CamelHttpResponseCode} != 200</simple>
                    <!-- > forward the zendesk error -->
                    <setProperty id="_setProperty2" propertyName="zendesk_error">
                        <jsonpath suppressExceptions="true">error</jsonpath>
                    </setProperty>
                    <convertBodyTo id="_convertBodyTo2" type="String"/>
                    <setBody id="_setBody5">
                        <simple>{"result": "zendesk error - record not created or updated for user ID ${exchangeProperty.user_id} - ${exchangeProperty.zendesk_error}"}</simple>
                    </setBody>
                    <log id="_log22" message="received an error from zendesk: ${body}"/>
                    <to id="_to19" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
                </when>
                <otherwise id="_otherwise2">
                    <setBody id="_setBody2">
                        <simple>{"result": "zendesk record created or updated for user ID ${exchangeProperty.user_id}"}</simple>
                    </setBody>
                    <log id="_log23" message="zendesk successfully created or updated: ${body}"/>
                    <to id="_to20" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
                </otherwise>
            </choice>
        </route>
    </camelContext>
    <bean class="org.mitre.fcc.broker.MultipartTransform" id="multipartTransform"/>
    <bean class="org.mitre.fcc.broker.ZendeskTransform" id="zendeskTransform"/>
    <bean class="org.mitre.fcc.broker.User" id="user"/>
    <bean class="org.mitre.fcc.broker.SplitAggregationStrategy" id="splitAggregator"/>
    <bean class="org.mitre.fcc.broker.ArrayListAggregationStrategy" id="multicastAggregator"/>
</blueprint>
