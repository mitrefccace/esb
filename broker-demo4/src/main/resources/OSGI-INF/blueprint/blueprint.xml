<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">
    <reference availability="mandatory"
        filter="(osgi.jndi.service.name=jdbc/mySqlDataSource)"
        id="myDataSource" interface="javax.sql.DataSource"/>
    <camelContext id="camelContext-c6505bbc-9a60-4cfd-9b26-6937c9f62fa6" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- <properties> -->
        <!-- <property key="http.proxyHost" value="gatekeeper.mitre.org" /> -->
        <!-- <property key="http.proxyPort" value="80" /> -->
        <!-- </properties> -->
        <!-- <camel:sslContextParameters id="sslContextParameters"> -->
        <!-- <camel:keyManagers keyPassword="changeit"> -->
        <!-- <camel:keyStore resource="/users/home/server/keystore.jks" -->
        <!-- password="changeit" /> -->
        <!-- </camel:keyManagers> -->
        <!-- </camel:sslContextParameters> -->
        <dataFormats>
            <bindy classType="org.mitre.fcc.broker.User"
                id="bindyDataformat" type="Csv"/>
            <json id="jack" library="Jackson"
                unmarshalTypeName="org.mitre.fcc.broker.User" useList="true"/>
        </dataFormats>
        <restConfiguration bindingMode="off" component="jetty"
            host="0.0.0.0" port="8080">
            <dataFormatProperty key="prettyPrint" value="true"/>
        </restConfiguration>
        <rest path="/acedirect">
            <get consumes="application/json" uri="/mysql/user">
                <to uri="direct:zendesk_bridge"/>
            </get>
            <post consumes="application/octet-stream"
                produces="application/json" uri="/user">
                <to uri="direct:createupdate"/>
            </post>
            <post id="post_user_rest_binding" uri="/data/user">
                <to uri="direct:datacreateupdate"/>
            </post>
        </rest>
        <route id="zendesk_jetty">
            <from id="_from4" uri="jetty:http://0.0.0.0:9090/api?matchOnUriPrefix=true"/>
            <log id="_log5" message="from test: route: CamelHttpPath=[${header.CamelHttpPath}], CamelHttpUri=[${header.CamelHttpUri}]"/>
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <log id="_log6" message="body: ${body}"/>
            <log id="_log7" message="request to zendesk - before"/>
            <to id="_to1" uri="jetty:https://vmdigioia.zendesk.com/api?bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            <log id="_log8" message="request to zendesk - after"/>
        </route>
        <route id="route_zendesk_bridge">
            <from id="_from5" uri="direct:zendesk_bridge"/>
            <log id="_log9" message="request to zendesk - before"/>
            <to id="_to2" uri="https4://vmdigioia.zendesk.com/api?bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            <log id="_log10" message="request to zendesk - after"/>
        </route>
        <route id="route_csv_form_createupdate">
            <!-- Split (i.e., iterate) the user object list -->
            <from id="_from3" uri="direct:createupdate"/>
            <log id="_log1" message="transform csv file..."/>
            <bean id="_bean1" method="transform" ref="multipartTransform"/>
            <unmarshal id="_unmarshal1" ref="bindyDataformat"/>
            <log id="_log2" message="Got ${body}"/>
            <split id="_split1">
                <simple>${body}</simple>
                <log id="_log3" message="Split ${body}"/>
                <log id="_log4" message="User Name: ${body.name}"/>
                <multicast id="_multicast1">
                    <to id="_to3" uri="direct:mysql"/>
                    <to id="_to4" uri="direct:zendesk"/>
                </multicast>
            </split>
        </route>
        <route id="route_data_createupdate">
            <!-- Split (i.e., iterate) the user object list -->
            <from id="_from1" uri="direct:datacreateupdate"/>
            <log id="_log14" message="transform csv file..."/>
            <to id="_to9" uri="log:org.mitre.fcc.broker?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <choice id="_choice1">
                <when id="_when1">
                    <simple>${in.header.Content-Type} == 'text/plain'</simple>
                    <to id="_to10" uri="direct:csvdatacreateupdate"/>
                </when>
                <when id="_when2">
                    <simple>${in.header.Content-Type} == 'application/json'</simple>
                    <to id="_to11" uri="direct:jsondatacreateupdate"/>
                </when>
                <otherwise id="_otherwise1">
                    <to id="_to12" uri="mock:unknownContent"/>
                </otherwise>
            </choice>
        </route>
        <route id="route_csv_data_createupdate">
            <from id="_from2" uri="direct:csvdatacreateupdate"/>
            <unmarshal id="_unmarshal2" ref="bindyDataformat"/>
            <log id="_log15" message="Got ${body}"/>
            <split id="_split2">
                <simple>${body}</simple>
                <log id="_log16" message="Split ${body}"/>
                <log id="_log17" message="User Name: ${body.name}"/>
                <multicast id="_multicast2">
                    <to id="_to7" uri="direct:mysql"/>
                    <to id="_to8" uri="direct:zendesk"/>
                </multicast>
            </split>
        </route>
        <route id="route_json_data_createupdate">
            <from id="_from8" uri="direct:jsondatacreateupdate"/>
            <unmarshal id="_unmarshal3" ref="jack"/>
            <log id="_log19" message="Got ${body}"/>
            <split id="_split3">
                <simple>${body}</simple>
                <log id="_log20" message="Split ${body}"/>
                <log id="_log21" message="User Name: ${body.name}"/>
                <multicast id="_multicast3">
                    <to id="_to13" uri="direct:mysql"/>
                    <to id="_to14" uri="direct:zendesk"/>
                </multicast>
            </split>
        </route>
        <route id="route_mysql_createorupdate">
            <from id="_from6" uri="direct:mysql"/>
            <setBody id="_setBody1">
                <simple trim="false">INSERT INTO users (user_id,user_name,user_address,user_phone,user_account,user_description) VALUES ("${body.id}","${body.name}","${body.address}","${body.phone}","${body.account}","${body.notes}") 
					ON DUPLICATE KEY UPDATE user_name="${body.name}",user_address="${body.address}",user_phone="${body.phone}",user_account="${body.account}",user_description="${body.notes}";</simple>
            </setBody>
            <log id="_log11" message="body before name jdbc: ${body}"/>
            <to id="_to5" uri="jdbc:myDataSource?useHeadersAsParameters=false"/>
            <log id="_log12" message="body after name jdbc: ${body}"/>
        </route>
        <route id="route_zendesk">
            <!-- uri="https4://vmdigioia.zendesk.com/api/v2/users/create_or_update.json?bridgeEndpoint=true&amp;sslContextParametersRef=sslContextParameters&amp;throwExceptionOnFailure=false" 
				/> -->
            <from id="_from7" uri="direct:zendesk"/>
            <log id="_log13" message="body in route_zendesk: ${body}"/>
            <bean id="_bean2" method="transform" ref="zendeskTransform"/>
            <log id="_log18" message="body after replace ${body}"/>
            <setHeader headerName="Content-Type" id="_setHeader1">
                <constant>application/json</constant>
            </setHeader>
            <convertBodyTo id="_convertBodyTo2" type="String"/>
            <to id="_to6" uri="https4://vmdigioia.zendesk.com/api/v2/users/create_or_update.json?bridgeEndpoint=true&amp;throwExceptionOnFailure=false"/>
            <log id="_log18" message="body after zendesk request ${body}"/>
        </route>
    </camelContext>
    <bean class="org.mitre.fcc.broker.MultipartTransform" id="multipartTransform"/>
    <bean class="org.mitre.fcc.broker.ZendeskTransform" id="zendeskTransform"/>
    <bean class="org.mitre.fcc.broker.User" id="user"/>
</blueprint>
